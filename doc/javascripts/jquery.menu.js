// Generated by CoffeeScript 1.4.0
(function() {
  var $, cache_objects, _menu;

  $ = jQuery;

  cache_objects = [];

  _menu = function(_self, option) {
    $.extend(this, option);
    this.self = $(_self);
    this.active = this.self;
    if (this.self.parent().is('li')) {
      this.active = this.self.parent();
    }
    return this;
  };

  _menu.prototype = {
    toggle: function() {
      if (this.self.is(this.except)) {
        return false;
      }
      if (this.active.hasClass('active')) {
        this.hide();
      } else {
        this.show();
      }
      return false;
    },
    show: function() {
      var source_padding, top;
      this.body = this.get_content();
      source_padding = (this.self.parent().outerHeight() - this.self.outerHeight()) / 2;
      top = this.self.outerHeight() + source_padding;
      if (this.direction === "up") {
        top -= this.body.outerHeight(true) + this.self.outerHeight();
      }
      this.body.css({
        top: top
      }).show();
      return this.active.addClass('active');
    },
    hide: function() {
      this.body.hide();
      return this.active.removeClass('active');
    },
    get_content: function() {
      return this.self.next();
    }
  };

  $.fn.menu = function(option) {
    var binder;
    option = $.extend({}, $.fn.menu.defaults, option || {});
    binder = option.live ? "live" : "bind";
    this[binder](option.trigger_name(), function(event) {
      var p;
      p = $(this).wrapData(option.cache_key_suffix, function() {
        return new _menu(this, option);
      });
      cache_objects.push(p);
      p.toggle();
      return false;
    });
    return this;
  };

  $.fn.menu.defaults = $.extend({}, $.fn.popup.defaults, {
    cache_key_suffix: "menu",
    direction: "down"
  });

  $(document).on('click.menu', function() {
    return $.each(cache_objects, function(index, ele) {
      return ele.hide();
    });
  });

}).call(this);
